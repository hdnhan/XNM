load "medit"

string path = "data/";
int nthfile = 2;
string filemesh = "Th" + nthfile;
mesh Thold = readmesh(path + filemesh + ".msh");
mesh Thnew = Thold;
//medit("Thold", Thold);

int[int] NoVMesh = [515, 1802, 6718];
real[int, int] hz(NoVMesh[nthfile - 1], 3);
ifstream filemeshZ(path + filemesh + "CoZ.txt");
filemeshZ >> hz;

real[string] mapz;
for (int i = 0; i < hz.n; i++){
    mapz[string(hz(i, 0)) + " " + string(hz(i, 1))] = hz(i, 2);
}

func real[int] FillZ(real[int] mat){
    for (int i = 0; i < Thold.nv; i++){
        mat(i) = mapz[string(Thold(i).x) + " " + string(Thold(i).y)];
    }
    return mat;
}

real[int, int] data(503, 4);
ifstream filedata(path + "SLMIKE21-3.txt");
filedata >> data;

func real[int] InterpolationData(real t){
    // t: time (unit: second)
    real T = 3600;
    int n = t /  T;
    real delt = t / T - n;
    real[int] res(4);
    res(0) = data(n, 0) * delt + data(n + 1, 0) * (1 - delt);
    res(1) = data(n, 1) * delt + data(n + 1, 1) * (1 - delt);
    res(2) = data(n, 2) * delt + data(n + 1, 2) * (1 - delt);
    res(3) = data(n, 3) * delt + data(n + 1, 3) * (1 - delt);
    return res; 
}

real dt = 1e-2, nu = 2.67 * 1e-4, g = 9.81, rho = 1000, n = 0.025, T = 9999999;
real tau =  g * n * n;
real eps = 0.05;

macro Grad(u) [dx(u), dy(u)] //
macro Grad1(ux, uy) [dx(ux), dy(ux), dx(uy), dy(uy)] //
macro Grad2(ux, uy) [[dx(ux), dy(ux)], [dx(uy), dy(uy)]] //
macro Div(ux, uy) (dx(ux) + dy(uy)) //


fespace Xhold(Thold, P1);
fespace Xhnew(Thnew, P1);

Xhnew zh; zh[] = FillZ(zh[]);
Xhold H, phi, Hold = 9 - zh;