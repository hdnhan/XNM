-- FreeFem++ v  3.610001 (date jeu. 12 juil. 2018 15:05:23)
 Load: lg_fem lg_mesh lg_mesh3 eigenvalue
    1 : load "medit"(load: loadLibary C:\Program Files (x86)\FreeFem++\\.\medit = 0)
    2 : 
    3 : string path = "data/";
    4 : string filemesh = "Th2";
    5 : mesh Th = readmesh(path + filemesh + ".msh");
    6 : medit("Th", Th);
    7 :
    8 : int NoVMesh; // Number of Vertices Mesh
    9 : if (filemesh == "Th1"){
   10 :     NoVMesh = 503;
   11 : }else if (filemesh == "Th2"){
   12 :     NoVMesh = 1787;
   13 : }else{
   14 :     NoVMesh = 6724;
   15 : }
   16 :
   17 : real[int, int] hz(NoVMesh, 4);
   18 : ifstream filemeshZ(path + filemesh + "CoZ.mesh");
   19 : filemeshZ >> hz;
   20 :
   21 : real[string] mapz;
   22 : for (int i = 0; i < hz.n; i++){
   23 :     mapz[string(hz(i, 0)) + " " + string(hz(i, 1))] = hz(i, 2);
   24 : }
   25 :
   26 : func real[int] FillZ(real[int] mat){
   27 :     for (int i = 0; i < Th.nv; i++){
   28 :         mat(i) = mapz[string(Th(i).x) + " " + string(Th(i).y)];
   29 :     }
   30 :     return mat;
   31 : }
   32 :
   33 : real[int, int] data(503, 4);
   34 : ifstream filedata(path + "SLMIKE21-3.txt");
   35 : filedata >> data;
   36 :
   37 : func real[int] InterpolationData(real t){
   38 :     // t: time (unit: second)
   39 :     real T = 3600;
   40 :     int n = t /  T;
   41 :     real delt = t / T - n;
   42 :     real[int] res(4);
   43 :     res(0) = data(n, 0) * delt + data(n + 1, 0) * (1 - delt);
   44 :     res(1) = data(n, 1) * delt + data(n + 1, 1) * (1 - delt);
   45 :     res(2) = data(n, 2) * delt + data(n + 1, 2) * (1 - delt);
   46 :     res(3) = data(n, 3) * delt + data(n + 1, 3) * (1 - delt);
   47 :     return res;
   48 : }
   49 :
   50 : real dt = 1e-2, nu = 2.67 * 1e1, g = 9.81, rho = 1000, n = 0.025, T = 9999999;
   51 : real tau =  g * n * n;
   52 :
   53 : fespace Xh(Th, P1);
   54 : Xh u1, u2, v1, v2;
   55 : Xh u1old = 0.5, u2old = 0, eta, H, phi;
   56 : Xh zh; zh[] = FillZ(zh[]);
   57 :
   58 : macro Grad(u) [dx(u), dy(u)]  )   [dx(u), dy(u)] //
   59 : macro Grad1(u1, u2) [dx(u1), dy(u1), dx(u2), dy(u2)]  )   [dx(u1), dy(u1), dx(u2), dy(u2)] //
   60 : macro Grad2(u1, u2) [[dx(u1), dy(u1)], [dx(u2), dy(u2)]]  )   [[dx(u1), dy(u1)], [dx(u2), dy(u2)]] //
   61 : macro Div(u1, u2) (dx(u1) + dy(u2))  )   (dx(u1) + dy(u2)) //
   62 :
   63 :
   64 : Xh uUB;
   65 :
   66 : problem NavierStokes([u1, u2], [v1, v2], solver = Crout) =
   67 :     int2d(Th)((u1 * v1 + u2 * v2) / dt)
   68 :     - int2d(Th)(
   69 :           convect([u1old, u2old], -dt, u1old) * v1 / dt
   70 :         + convect([u1old, u2old], -dt, u2old) * v2 / dt
   71 :     )
   72 :     //+ int2d(Th)(g * Grad(eta)' * [v1, v2])
   73 :     //- int2d(Th)(g * eta * Div(v1, v2))
   74 :     - int2d(Th)(nu / H * Grad(H)    [dx(H), dy(H)] ' * Grad2(u1, u2)      [[dx(u1), dy(u1)], [dx( u2), dy( u2)]]È™ßt±Ë?  * [v1, v2] - nu * Grad1(u1, u2)      [dx(u1), dy(u1), dx( u2), dy( u2)] ' * Grad1(v1, v2)      [dx(v1), dy(v1), dx( v2È™ßt±Ë?), dy( v2)] )
   75 :     //+ int2d(Th)((tau * 1/H^(4/3) * (u1old * u1old + u2old * u2old)^(0.5)) * (u1 * v1 + u2 * v2))
   76 :     + on(2, u1 = uUB, u2 = 0) + on(1, u1 = 0, u2 = 0);
   77 :
   78 :
   79 : for(real t = dt; t < T; t += dt){
   80 :     cout << endl << "t: " << t << endl;
   81 :     real[int] BoundData = InterpolationData(t);
   82 :
   83 :     eta = 9;
   84 :     H = 9 - zh;
   85 :     uUB = BoundData(0);
   86 :     NavierStokes;
   87 :     u1old = u1; u2old = u2;
   88 :
   89 :     plot([u1, u2], fill = 1, value = 1);
   90 :     //plot(H, fill = 1, value = 1);
   91 :
   92 : }
   93 :  sizestack + 1024 =4936  ( 3912 )
 
  --  mesh:  Nb of Triangles =   3186, Nb of Vertices 1787
version de medit ffmedit.exe -popen -filebin 1  Th
  -- Medit,  Release 3.0a (Nov. 30, 2007)
     Copyright (c) LJLL, 1999-2007.
     compiled:  jeu. 21 juin 2018 13:37:18 (with ff++ 3.61).
 
medit with binary version of popen : mesh(es)
mesh_name= Th
 Loading data file(s)
End of mesh
  Input seconds:     0.00
 
 medit1()
 
 Building scene(s)
  Creating scene 1
   Loading default options
  Scene seconds:     0.32
 
 Rendering scene(s)
 
 Total running seconds:  6.42
 Thank you for using Medit.
 
t: 0.01
 kk 2 3 :  Warning: -- Your set of boundary condition is incompatible with the mesh label.
  -- Solve :
          min 0.433935  max 0.6147
          min -0.00466183  max 0.00305559
 
t: 0.02
 Warning: -- Your set of boundary condition is incompatible with the mesh label.
  -- Solve :
          min 0.433837  max 0.6147
          min -0.00932346  max 0.00610837
 
t: 0.03
 Warning: -- Your set of boundary condition is incompatible with the mesh label.
  -- Solve :
          min 0.433739  max 0.6147
          min -0.0139855  max 0.00915888
 
t: 0.04
 Warning: -- Your set of boundary condition is incompatible with the mesh label.
  -- Solve :
          min 0.433641  max 0.6147
          min -0.0186485  max 0.0122077
 
t: 0.05
 Warning: -- Your set of boundary condition is incompatible with the mesh label.
  -- Solve :
          min 0.433543  max 0.6147
          min -0.023313  max 0.0152553
 
t: 0.06
 Warning: -- Your set of boundary condition is incompatible with the mesh label.
  -- Solve :
          min 0.433446  max 0.6147
          min -0.0279797  max 0.0183023
 
t: 0.07
 Warning: -- Your set of boundary condition is incompatible with the mesh label.
  -- Solve :
          min 0.433348  max 0.6147
          min -0.0326492  max 0.0213493
 
t: 0.08
 Warning: -- Your set of boundary condition is incompatible with the mesh label.
  -- Solve :
          min 0.43325  max 0.6147
          min -0.037322  max 0.0243968
 
t: 0.09
 Warning: -- Your set of boundary condition is incompatible with the mesh label.
  -- Solve :
          min 0.433152  max 0.6147
          min -0.0419987  max 0.0274453
 
t: 0.1
 Warning: -- Your set of boundary condition is incompatible with the mesh label.
  -- Solve :
          min 0.433054  max 0.6147
          min -0.04668  max 0.0304953
 
t: 0.11
 Warning: -- Your set of boundary condition is incompatible with the mesh label.
  -- Solve :
          min 0.432956  max 0.6147
          min -0.0513664  max 0.0335475
^C try getConsole D:\Study\Projects\XNM\code\XNM_NS.edp
